version: '3'
services:

  #PHP Service
  laravel:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: laravel_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: laravel_app
      SERVICE_TAGS: laravel_dev
    working_dir: /var/www
    volumes:
      - ./src:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - laravel-network

  #MySQL Service
  db:
    #image: mysql:5.7.22
    image: mysql:5.7
    container_name: laravel_db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel_db
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: Laraveldb_dev
      SERVICE_NAME: Laraveldb_mysql
    volumes:
      - dbdata:/var/lib/mysql/
 #     - ./mysql/dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./mysql/dump/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - laravel-network
  adminer:
    image: adminer
    container_name: laravel_adminer
    restart: always
    ports:
      - 8080:8080  
    networks:
      - laravel-network
#  phpmyadmin:
#    image: phpmyadmin/phpmyadmin
#    container_name: laravel_phpmyadmin
#    ports:
#      - 8082:8082
#    restart: always
#    links:
#       - db:laravel_db
#    depends_on:
#       - db
#    networks:
#      - laravel-network

#Docker Networks
networks:
  laravel-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local